devtools::install_github("stan-dev/cmdstanr")
install.packages("tibble")
devtools::install_github("stan-dev/cmdstanr")
cmdstanr::install_cmdstan()
install.packages("make")
library(cmdstanr)
install_cmdstan()
library(cmdstanr)
install_cmdstan()
install.packages(c("coda","mvtnorm","devtools","loo","dagitty"))
install.packages("mvtnorm")
library("mvtnorm")
install.packages(c("coda","loo","dagitty"))
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
size = 0:10
logistic(0)
inv_logit(0)
logit(0)
logit(0.5)
inv_logit(logit(0.5))
inv_logit(logit(1.5 +  size * 0.05 ))
size
size = 1:10
inv_logit(logit(1.5 +  size * 0.05 ))
inv_logit(1.5 +  size * 0.05)
inv_logit( logit(1.5) +  size * 0.05)
inv_logit( 1.5 +  size * 0.05)
round(inv_logit( 1.5 +  size * 0.05))
exp(1.5 +  size * 0.05)
exp(0.001 +  size * 0.005)
round(exp(0.001 +  size * 0.005))
round(exp(0.1 +  size * 0.005))
round(exp(0.1 +  size * 0.05))
round(exp(0.1 +  size * 0.5))
round(exp(0.1 +  8 * 0.5))
round(inv_logit( 1.5 +  8 * 0.05))
(inv_logit( 1.5 +  8 * 0.05))
exp(-0.0004 + 0.0008* 2)
exp(-9.42 + 44.7* 2)
(-9.42 + 44.7* 2)
library(dplyr)
library(ggplot2)
rm(list=ls())
2+4
My first r code
# add 2 + 2
2 + 2
45400*0.7
(45400*0.7)/12
data = read.csv("Dropbox/Projects_JM/corona/owid-covid-data.csv", sep =";")
View(data)
data = read.csv("Dropbox/Projects_JM/corona/owid-covid-data.csv", sep =",")
View(data)
library(readxl)
Zooplankton_block_1 <- read_excel("Dropbox/Muenster 2020-2026/Student Projects/BSc/Merle and Marvin/data/Merle/Zooplankton/Zooplankton_block_1.xlsx")
View(Zooplankton_block_1)
data <- read_excel("Dropbox/Muenster 2020-2026/Student Projects/BSc/Merle and Marvin/data/Merle/Zooplankton/Zooplankton_block_1.xlsx")
library(brms)
Virulence_pass10 <- read.csv("~/Dropbox/Projects_JM/Muenster/Barbara/2022/Virulence_pass10.csv")
View(Virulence_pass10)
xdata = Virulence_pass10 <- read.csv("~/Dropbox/Projects_JM/Muenster/Barbara/2022/Virulence_pass10.csv")
rm(list=ls(all=TRUE))
library(brms)
xdata = Virulence_pass10 <- read.csv("~/Dropbox/Projects_JM/Muenster/Barbara/2022/Virulence_pass10.csv")
rm(list=ls(all=TRUE))
library(brms)
xdata = Virulence_pass10 <- read.csv("~/Dropbox/Projects_JM/Muenster/Barbara/2022/Virulence_pass10.csv")
xdata =  read.csv("~/Dropbox/Projects_JM/Muenster/Barbara/2022/Virulence_pass10.csv")
rm(list=ls(all=TRUE))
library(brms)
xdata =  read.csv("~/Dropbox/Projects_JM/Muenster/Barbara/2022/Virulence_pass10.csv")
str(xdata)
full= brm(mortality~ pathogen_adaptation * test_context + (1|strain) + (1|colony), data=xdata, family=bernoulli())
plot(full)
summary(full)
summary(full)
full= brm(mortality~ pathogen_adaptation * test_context + (1|strain) + (1|colony), data=xdata, family=bernoulli(), control = control = list(adapt_delta = 0.95))
full= brm(mortality~ pathogen_adaptation * test_context + (1|strain) + (1|colony), data=xdata, family=bernoulli(),
control = list(adapt_delta = 0.95))
summary(full)
plot(full)
full= brm(mortality~ pathogen_adaptation * test_context + (1|strain) + (1|colony), data=xdata, family=bernoulli(),
control = list(adapt_delta = 0.95), iter = 4000, chains = 6, cores = 6)
summary(full)
plot(full)
summary(full)
logit_scaled(0)
logit_scaled(1)
inv_logit_scaled(0.5)
inv_logit_scaled(0)
inv_logit_scaled(-1.05)
inv_logit_scaled(-1.05) * 100
str(xdata)
xdata$pathogen_adaptation = factor(xdata$pathogen_adaptation)
levels(xdata$pathogen_adaptation)
xdata$test_context = factor(xdata$test_context)
levels(xdata$test_context)
summary(full)
inv_logit_scaled(-1.05) * 100
inv_logit_scaled(-1.72) * 100
# 95% CI
inv_logit_scaled(-1.72) * 100
inv_logit_scaled(-0.39) * 100
post = extract_draws(full)
View(post)
post = posterior_samples(full)
post
PredFun <- function(post, PA_I = 0, TC_I= 0){
p <- post$b_Intercept + post$b_pathogen_adaptationIndividual *  PA_I + post$b_test_contextIndividual_context * TC_I +
post$`b_pathogen_adaptationIndividual:test_contextIndividual_context` * PA_I *  TC_I
}
GG = PredFun(post, PA_I = 0, TC_I = 0)
mean(GG)
PredFun <- function(post, PA_I = 0, TC_I= 0){
p <- post$b_Intercept + post$b_pathogen_adaptationIndividual *  PA_I + post$b_test_contextIndividual_context * TC_I +
post$`b_pathogen_adaptationIndividual:test_contextIndividual_context` * PA_I *  TC_I
return(inv_logit_scaled(p) * 100)
}
# What is the surival probability of ants in group - group treatment
GG = PredFun(post, PA_I = 0, TC_I = 0)
mean(GG)
summary(full)
library(HDInterval)
hdi(GG)
II = PredFun(post, PA_I = 1, TC_I = 1)
mean(II)
hdi(II)
GI = PredFun(post, PA_I = 0, TC_I = 1)
mean(GI)
hdi(GI)
Contrast1 = logit_scaled(II) - logit_scaled(GG)
logit_scaled(II)
PredFun <- function(post, PA_I = 0, TC_I= 0){
p <- post$b_Intercept + post$b_pathogen_adaptationIndividual *  PA_I + post$b_test_contextIndividual_context * TC_I +
post$`b_pathogen_adaptationIndividual:test_contextIndividual_context` * PA_I *  TC_I
return(p)
}
# What is the MORTALITY probability of ants in group - group treatment
GG = PredFun(post, PA_I = 0, TC_I = 0)
GG
mean(inv_logit_scaled(GG))
hdi(inv_logit_scaled(GG))
II = PredFun(post, PA_I = 1, TC_I = 1)
Contrast1 = II - GG
density(Contrast1)
hist(Contrast1)
LOS = function(s){
p = length(which(s > 0)) / length(s) * 100
return(p)
}
#
LOS(Contrast1)
# What is the probability that mortality in II groupt is larger than in the GG group
LOS(II - GG)
# What is the probability that mortality in II groupt is larger than in the GG group
1- LOS(II - GG)/100
conditional_effects(full, effects = "pathogen_adaptation:test_context")
IG = PredFun(post, PA_I = 1, TC_I = 0)
mean(inv_logit_scaled(IG))
hdi(inv_logit_scaled(IG))
GI = PredFun(post, PA_I = 0, TC_I = 1)
mean(inv_logit_scaled(GI))
hdi(inv_logit_scaled(GI))
IG = PredFun(post, PA_I = 1, TC_I = 0)
mean(inv_logit_scaled(IG))
hdi(inv_logit_scaled(IG))
LOS(IG-GI)
1 - LOS(IG-GI) / 100
library(boral)
install.packages("boral")
library(boral)
library(rethinking)
library(data.table)
rm(list=ls(all=TRUE))
# Functions
LOS <- function(x=NULL){
out =   (length(which(x > 0)) / length(x))*100
return(round(out, 3))
}
###########################################################################################################
# First get the data
getwd()
setwd("~/Dropbox/Jaime M/Projects_JM/FSU/Pool_manipulation/KG_git/")
Gdata <- read.table("data/01_GuppyField_data.tsv")
Gdata <- read.csv("data/01_GuppyField_data.tsv")
View(Gdata)
Gdata <- read.csv("data/01_GuppyField_data.tsv", sep = '\t')
View(Gdata)
Kdata <- read.csv("data/KillifishIPM.csv", sep = '\t')
write.csv(Gdata, "data/01_GuppyField_data.csv" )
write.csv(Gdata, "data/KillifishIPM.csv" )
write.csv(Gdata, "data/01_GuppyField_data.csv" )
write.csv(Kdata, "data/KillifishIPM.csv" )
Kdata <- read.csv("data/01_KillifishField_data.tsv", sep = '\t')
Gdata <- read.csv("data/01_GuppyField_data.tsv", sep = '\t')
Kdata <- read.csv("data/01_KillifishField_data.tsv", sep = '\t')
write.csv(Gdata, "data/01_GuppyField_data.csv" )
write.csv(Kdata, "data/01_KillifishField_data.csv" )
