bm1 <- brm(Y | trials(N_tot) ~ Treatment, family = binomial(), data = Data  )
summary(bm1)
conditional_effects(bm1, effects = "Treatment")
glimpse(Data)
# Run beta model 1
bm_beta <- brm(ReducedEyePercentage ~ Treatment, family = Beta(), data = Data  )
# Run beta model 1
Data$ReducedEyePercentage[which(ReducedEyePercentage == max(ReducedEyePercentage))]
Data$rEye = Data$ReducedEyePercentage
Data$rEye[which(Data$rEye == max(Data$rEye))]
Data$rEye[which(Data$rEye == 100)]
Data$rEye = Data$ReducedEyePercentage / 100
Data$rEye[which(Data$rEye == 1)]
Data$rEye[which(Data$rEye == 1)] = 0.99999999999999999999
Data$rEye[which(Data$rEye == 0)] = 0.00000000000000000001
bm_beta <- brm(rEye ~ Treatment, family = Beta(), data = Data  )
Data$rEye
Data$rEye = Data$ReducedEyePercentage / 100
Data$rEye[which(Data$rEye == 1)] = 0.99999999999999999999
Data$rEye[which(Data$rEye == 0)] = 0.00000000000000000001
bm_beta <- brm(rEye ~ Treatment, family = Beta(), data = Data  )
max(Data$rEye)
range(Data$rEye)
Data$rEye = Data$ReducedEyePercentage / 100
Data$rEye[which(Data$rEye == 1)] = 0.9999
range(Data$rEye)
Data$rEye[which(Data$rEye == 0)] = 0.0001
range(Data$rEye)
bm_beta <- brm(rEye ~ Treatment, family = Beta(), data = Data  )
summary(bm_beta)
conditional_effects(bm_beta, effects = "Treatment")
inv_logit_scaled(-3.03)
library(rethinking)
logistic(0)
inv_logit(0.5)
logistic(0.5)
logit(0.5)
logit_scaled(0)
logit_scaled(0.5)
logit_scaled(-3.03)
logit_scaled(-3.03)
logit_scaled(0.5)
inv_logit_scaled(0)
inv_logit_scaled(-3.03)
conditional_effects(bm1, effects = "Treatment") + ylab("% Reduced Eye")
conditional_effects(bm1, effects = "Treatment", ylab = "% Reduced Eye")
conditional_effects(bm1, effects = "Treatment")
# Run binomial model 1
bm1 <- brm(Y | trials(N_tot) ~ 0+Treatment, family = binomial(), data = Data  )
summary(bm1)
post = posterior_samples(bm1)
summary(post)
summary(bm1)
apply(post, 2, mean)
apply(post, 2, mean)[1:4]
logit_scaled(apply(post, 2, mean)[1:4])
inv_logit_scaled(apply(post, 2, mean)[1:4])
inv_logit_scaled(apply(post, 2, hdi, prob = .95)[1:4])
inv_logit_scaled(apply(post, 2, HPDI, prob = .95))
inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,]
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = inv_logit_scaled(apply(post, 2, mean)[1:4]),
LC = inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
UC = inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
LC = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
UC = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UP), width=.1) +
geom_line() +
geom_point()
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point()
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 5)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 3)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 5)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 2)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 2) + ylab("Reduce eye (%)")
glimpse(Data)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 2) + ylab("Reduce eye (%)") + geom_point(y =ReducedEyePercentage )
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)
p
to_plot = data_frame(Treatments =levels(Data$Treatment),
y = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
to_plot = c(Treatments =levels(Data$Treatment),
y = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
to_plot = c(y = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
to_plot = c(y = 100* as.vector(inv_logit_scaled(apply(post, 2, mean)[1:4])),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
to_plot = data_frame(Treatments =levels(Data$Treatment),
y = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
?stat_summary
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=to_plot$Treatments, y=to_plot$mean), colour="blue")
p
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=to_plot$Treatments, y=to_plot$mean), colour="blue")
p <- ggplot(post[,1:4], aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)
p
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue")
p
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue")
p
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue") +
p +   geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue") +
?stat_summary
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue") +
p +   geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue") +
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue") +
p +   geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue")
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE) +
geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue") +
p +   geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue")
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue")
p + geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue")
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue") +
geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue") +
geom_point(aes(x=3, y=to_plot$mean[3]), colour="blue") +  geom_errorbar(aes(x=3, ymin=to_plot$ymin[3], ymax=to_plot$ymax[3] ), colour="blue") +
geom_point(aes(x=4, y=to_plot$mean[4]), colour="blue") +  geom_errorbar(aes(x=4, ymin=to_plot$ymin[4], ymax=to_plot$ymax[4] ), colour="blue")
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue") +
geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue") +
geom_point(aes(x=3, y=to_plot$mean[3]), colour="blue") +  geom_errorbar(aes(x=3, ymin=to_plot$ymin[3], ymax=to_plot$ymax[3] ), colour="blue") +
geom_point(aes(x=4, y=to_plot$mean[4]), colour="blue") +  geom_errorbar(aes(x=4, ymin=to_plot$ymin[4], ymax=to_plot$ymax[4] ), colour="blue")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=LC, ymax=UC), width=.1) +
geom_line() +
geom_point(size = 2) + ylab("Reduce eye (%)") +
geom_point(aes(x=5.6, y=3.9), colour="blue")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width=.1) +
geom_line() +
geom_point(size = 2) + ylab("Reduce eye (%)") +
geom_point(aes(x=5.6, y=3.9), colour="blue")
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, HPDI, prob = .95))[2,1:4])
to_plot
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width=.1) +
geom_line() +
geom_point(size = 2) + ylab("Reduce eye (%)") +
geom_point(aes(x=5.6, y=3.9), colour="blue")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width=.1) +
geom_line() +
geom_point(size = 2) + ylab("Reduce eye (%)")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width=.1) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width=.1) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width= .5) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width= .2) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue", width= .2) +
geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue", width= .2) +
geom_point(aes(x=3, y=to_plot$mean[3]), colour="blue") +  geom_errorbar(aes(x=3, ymin=to_plot$ymin[3], ymax=to_plot$ymax[3] ), colour="blue", width= .2) +
geom_point(aes(x=4, y=to_plot$mean[4]), colour="blue") +  geom_errorbar(aes(x=4, ymin=to_plot$ymin[4], ymax=to_plot$ymax[4] ), colour="blue", width= .2)
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)  + ylab("Reduce eye (%)")
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue", width= .2) +
geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue", width= .2) +
geom_point(aes(x=3, y=to_plot$mean[3]), colour="blue") +  geom_errorbar(aes(x=3, ymin=to_plot$ymin[3], ymax=to_plot$ymax[3] ), colour="blue", width= .2) +
geom_point(aes(x=4, y=to_plot$mean[4]), colour="blue") +  geom_errorbar(aes(x=4, ymin=to_plot$ymin[4], ymax=to_plot$ymax[4] ), colour="blue", width= .2)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width= .2) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
c(post$b_TreatmentDMAG_m,post$b_TreatmentDMAG_f) - c(post$b_TreatmentRNAi_m,post$b_TreatmentRNAi_m)
H1 = c(post$b_TreatmentDMAG_m,post$b_TreatmentDMAG_f) - c(post$b_TreatmentRNAi_m,post$b_TreatmentRNAi_m)
DMAG = inv_logit_scaled(c(post$b_TreatmentDMAG_m,post$b_TreatmentDMAG_f))
RNAi  =  inv_logit_scaled(c(post$b_TreatmentRNAi_m,post$b_TreatmentRNAi_m))
H1 = DMAG -  RNAi
length(which(H1 > 0)) / length(H1)
H1 = DMAG -  RNAi
length(which(H1 > 0)) / length(H1)
100 * length(which(H1 > 0)) / length(H1)
DMAG = inv_logit_scaled(post$b_TreatmentDMAG_m) +  inv_logit_scaled(post$b_TreatmentDMAG_f)
DMAG = (inv_logit_scaled(post$b_TreatmentDMAG_m) +  inv_logit_scaled(post$b_TreatmentDMAG_f))/2
RNAi  =  (inv_logit_scaled(post$b_TreatmentRNAi_m) +  inv_logit_scaled(post$b_TreatmentRNAi_f))/2
H1 = DMAG -  RNAi
100 * length(which(H1 > 0)) / length(H1)
mean(H1)
hdi(H1)
hdi(H1)[1]
hdi(H1)[1:2]
apply(post, 2, hdi)
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, hdi))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, hdi))[2,1:4])
to_plot
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)  + ylab("Reduce eye (%)")
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue", width= .2) +
geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue", width= .2) +
geom_point(aes(x=3, y=to_plot$mean[3]), colour="blue") +  geom_errorbar(aes(x=3, ymin=to_plot$ymin[3], ymax=to_plot$ymax[3] ), colour="blue", width= .2) +
geom_point(aes(x=4, y=to_plot$mean[4]), colour="blue") +  geom_errorbar(aes(x=4, ymin=to_plot$ymin[4], ymax=to_plot$ymax[4] ), colour="blue", width= .2)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width= .2) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
DMAG = inv_logit_scaled(c(post$b_TreatmentDMAG_m,post$b_TreatmentDMAG_f))
RNAi  =  inv_logit_scaled(c(post$b_TreatmentRNAi_m,post$b_TreatmentRNAi_m))
H1 = DMAG -  RNAi
100 * length(which(H1 > 0)) / length(H1)
mean(H1)
hdi(H1)[1:2]
rm(list=ls()) # clean the memory
library("dplyr")
library("ggplot2")
library("ggfortify")
library("brms")
library("tidyverse")
library("readxl")
library("HDInterval")
Data <- read_excel("Dropbox/Projects_JM/Muenster/Ozge/Data.xlsx")
glimpse(Data)
Data$Treatment = factor(Data$Treatment)
levels(Data$Treatment)
levels(Data$Treatment) <- c("DMAG_m", "DMAG_f", "RNAi_m", "RNAi_f" )
levels(Data$Treatment)
Data$N_tot = Data$NormalEyeNumbers + Data$ReducedEyeNumbers
Data$Y = Data$ReducedEyeNumbers
# Run binomial model 1
bm1 <- brm(Y | trials(N_tot) ~ 0 + Treatment, family = binomial(), data = Data  )
summary(bm1)
conditional_effects(bm1, effects = "Treatment")
logit_scaled(0.5)
inv_logit_scaled(logit_scaled(0.5))
inv_logit_scaled(-4.30)
100*inv_logit_scaled(-4.30)
plot(bm1)
# Run binomial model 1
bm1 <- brm(Y | trials(N_tot) ~ 0 + Treatment, family = binomial(), data = Data, iter = 2000, warmup = 1000, chains = 4  )
summary(bm1)
conditional_effects(bm1, effects = "Treatment")
plot(bm1)
post = posterior_samples(bm1)
glimpse(post)
apply(post, 2, mean) # 2 = coloumns , 1 = rows
apply(post, 2, hdi) # 2 = coloumns , 1 = rows
to_plot = data_frame(Treatments =levels(Data$Treatment),
mean = 100* inv_logit_scaled(apply(post, 2, mean)[1:4]),
ymin= 100 *inv_logit_scaled(apply(post, 2, hdi))[1,1:4],
ymax = 100 *inv_logit_scaled(apply(post, 2, hdi))[2,1:4])
to_plot
p <- ggplot(Data, aes(x=Treatment, y=ReducedEyePercentage)) +
geom_violin(trim=FALSE)  + ylab("Reduce eye (%)")
p + geom_point(aes(x=1, y=to_plot$mean[1]), colour="blue") +  geom_errorbar(aes(x=1, ymin=to_plot$ymin[1], ymax=to_plot$ymax[1] ), colour="blue", width= .2) +
geom_point(aes(x=2, y=to_plot$mean[2]), colour="blue") +  geom_errorbar(aes(x=2, ymin=to_plot$ymin[2], ymax=to_plot$ymax[2] ), colour="blue", width= .2) +
geom_point(aes(x=3, y=to_plot$mean[3]), colour="blue") +  geom_errorbar(aes(x=3, ymin=to_plot$ymin[3], ymax=to_plot$ymax[3] ), colour="blue", width= .2) +
geom_point(aes(x=4, y=to_plot$mean[4]), colour="blue") +  geom_errorbar(aes(x=4, ymin=to_plot$ymin[4], ymax=to_plot$ymax[4] ), colour="blue", width= .2)
ggplot(to_plot, aes(x=Treatments, y=mean)) +
geom_errorbar(aes(ymin=ymin, ymax=ymax), width= .2) +
geom_line() +
geom_point(size = 3) + ylab("Reduce eye (%)")
DMAG = inv_logit_scaled(c(post$b_TreatmentDMAG_m,post$b_TreatmentDMAG_f))
RNAi  =  inv_logit_scaled(c(post$b_TreatmentRNAi_m,post$b_TreatmentRNAi_m))
H1 = DMAG -  RNAi
100 * length(which(H1 > 0)) / length(H1)
mean(H1)
hdi(H1)[1:2]
DMAG = 100* inv_logit_scaled(c(post$b_TreatmentDMAG_m,post$b_TreatmentDMAG_f))
RNAi  = 100 * inv_logit_scaled(c(post$b_TreatmentRNAi_m,post$b_TreatmentRNAi_m))
H1 = DMAG -  RNAi
100 * length(which(H1 > 0)) / length(H1)
mean(H1)
hdi(H1)[1:2]
#  reduce eyes are more common in females
H2 = 100* inv_logit_scaled(post$b_TreatmentDMAG_f) - 100* inv_logit_scaled(post$b_TreatmentDMAG_m)
100* length(which(H2 > 0 )) / length(H2)
#  reduce eyes are more common in females RNAi
H3 = 100* inv_logit_scaled(post$b_TreatmentRNAi_f) - 100* inv_logit_scaled(post$b_TreatmentRNAi_m)
100* length(which(H3 > 0 )) / length(H3)
100* length(which(H2 - H3 > 0 )) / length(H3)
# Is there
100* length(which(H2 - H3 > 0 )) / length(H2 - H3)
# are the effects of DMAG on sex differences stronger than the effects RNAi on sex differences?
100* length(which(H2 - H3 > 0 )) / length(H2 - H3)
rm(list=ls(all=TRUE))
####
library(rethinking)
library(data.table)
rm(list=ls(all=TRUE))
# Functions
LOS <- function(x=NULL){
out =   (length(which(x > 0)) / length(x))*100
return(round(out, 3))
}
###########################################################################################################
# First get the data
getwd()
setwd("~/Dropbox/Jaime M/Projects_JM/FSU/Pool_manipulation/KG_git/")
Gdata <- read.csv("data/GuppyIMP.csv")
Kdata <- read.csv("data/KillifishIPM.csv")
Gdata$z <- Gdata$SL1_mm - 18
Gdata$z1 <- Gdata$SL2_mm
Gdata <- Gdata[-which(Gdata$Sex2=="M"),]
Gdata$Recr[which(Gdata$Repr==0 & Gdata$surv ==1)] = 0
Kdata$z <- Kdata$SL1_mm - 18
Kdata$z1 <- Kdata$SL2_mm
Kdata <- Kdata[-which(Kdata$Sex2=="M"),]
Kdata$Recr[which(Kdata$Repr==0 & Kdata$surv ==1)] = 0
meanA = mean(unique(c(Gdata$area, Kdata$are) ))
sdA = sd(unique(c(Gdata$area, Kdata$area) ))
Gdata$area <- (Gdata$area - meanA) / sdA
Kdata$area <- (Kdata$area - meanA) / sdA
meanC = mean(unique(c(Gdata$canopy, Kdata$canopy) ))
sdC = sd(unique(c(Gdata$canopy, Kdata$canopy) ))
Gdata$canopy <- (Gdata$canopy - meanC) /  sdC
Kdata$canopy <- (Kdata$canopy - meanC) /  sdC
Kdata$stream <- factor(Kdata$Location)
levels(Kdata$stream) <- 1:length(levels(Kdata$stream))
Kdata$stream <- as.numeric(Kdata$stream)
Gdata$stream <- factor(Gdata$Location)
levels(Gdata$stream) <- 1:length(levels(Gdata$stream))
Gdata$stream <- as.numeric(Gdata$stream)
df = cbind(Gdata, Kdata)
df = rbind(Gdata, Kdata)
names(Gdata)
df = rbind(Gdata[,c("sp", "KG", "NK", "NG","SL1_mm", "mass1_gr")], Kdata[,c("sp", "KG", "NK", "NG","SL1_mm", "mass1_gr")])
df$Pool = "KG"
if(df$KG == 1){1}
df$KG == 1
if(df$KG == 1){return(1)}
?ifelse
df$Pool= "KG"
df$Pool= factor(df$KG:df$NK:df$NG)
df$KG
df$Pool=(as.character(df$KG):as.character(df$NK):as.character(df$NG))
as.character(df$NG)
df$Pool=paste(df$NK, df$NG, sep = "-")
df$Pool= factor(paste(df$NK, df$NG, sep = "-"))
levels(Pool)
levels(df$Pool)
levels(df$Pool) = c("KG", "NG", "NK")
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
df$Poolsp = factor(df$Pool,df$sp)
df$Poolsp = factor(paste(df$sp, df$Pool, sep= "-"))
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "mass1_gr", y = "SL1_mm",
color = "Pool", size = 3, alpha = 0.6,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Species", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "mass1_gr", y = "SL1_mm",
color = "Pool", size = 3, alpha = 0.6,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
df$Poolsp = factor(paste(df$sp, df$Pool, sep= "-"))
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "mass1_gr", y = "SL1_mm",
color = "Poolsp", size = 3, alpha = 0.6,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "mass1_gr", y = "SL1_mm",
color = "Poolsp", size = 3, alpha = 0.6,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Poolsp", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "mass1_gr", y = "SL1_mm",
color = "Poolsp", size = 3, alpha = 0.6,
#  palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Poolsp", color = "black", size = 0.2)
)
df$z = log10(df$SL1_mm)
df$w = log10(df$mass1_gr)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "w", y = "z",
color = "Poolsp", size = 3, alpha = 0.6,
#  palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Poolsp", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "w", y = "z",
color = "Poolsp", size = 3, alpha = 0.6,
shape = "sp",
#  palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Poolsp", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "w", y = "z",
color = "Pool", size = 3, alpha = 0.6,
shape = "sp",
#  palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "z", y = "w",
color = "Pool", size = 3, alpha = 0.6,
shape = "sp",
#  palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "z", y = "w",
color = "Pool", size = 2, alpha = 0.2,
shape = "sp",
#  palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "z", y = "w",
color = "Pool", size = 2, alpha = 0.2,
shape = "sp",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
# Grouped Scatter plot with marginal density plots
ggscatterhist(
df, x = "z", y = "w",
color = "Pool", size = 2, alpha = 1,
shape = "sp",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.params = list(fill = "Pool", color = "black", size = 0.2)
)
