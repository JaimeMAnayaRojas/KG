dens((post$b_Intercept), add = T, show.HPDI = T)
dens((post$b_z + post$`b_z:NK1`), show.HPDI = T,  col= "red", ylim = c(0,15), main = paste("Slope ", "(", LOS(post$`b_z:NK1`), "%", ")", sep = "" ))
dens((post$b_z), add = T, show.HPDI = T)
graphics.off()
# Predictions for Growth
post_G = posterior_samples(Growth_G)
p.KG_G= (sapply(1:length(size), function(i) p_linkG(post = post_G, NK = 0, size = size, center = 18)))
# Predictions for Growth
post_G = posterior_samples(Growth_G)
####
library(data.table)
library(brms)
rm(list=ls(all=TRUE))
###########################################################################################################
# First get the data
getwd()
#setwd("~/Dropbox/Jaime M/Projects_JM/FSU/Pool_manipulation/KG_git/")
source("R/Functions.R")
center = 18
# Guppy data cleaning -----------------------------------------------------
Gdata <- read.csv("data/GuppyIPM.csv")
Kdata <- read.csv("data/KillifishIPM.csv")
Gdata$z <- Gdata$SL1_mm - center
Gdata$z2 <- Gdata$SL1_mm^2 - center^2
Gdata$z1 <- Gdata$SL2_mm
# Make sure the non reproductive have zeros
Gdata$Recr[which(Gdata$Repr==0 & Gdata$surv ==1)] = 0
# Killifish data cleaning -------------------------------------------------
Kdata$z <- Kdata$SL1_mm - center
Kdata$z1 <- Kdata$SL2_mm
Kdata$z2 <- Kdata$SL1_mm^2 - center^2
# Make sure the non reproductive have zeros
Kdata$Recr[which(Kdata$Repr==0 & Kdata$surv ==1)] = 0
# Normalize the covariates within streams -----------------
Gdata$FishBiom <- Gdata$BiomassG1 + Gdata$BiomassK1
Kdata$FishBiom <- Kdata$BiomassG1 + Kdata$BiomassK1
Gdata$Density <-( Gdata$BiomassG1 + Gdata$BiomassK1) / Gdata$area
Kdata$Density <- (Kdata$BiomassG1 + Kdata$BiomassK1) / Kdata$area
library("plyr")
names(Gdata)
vars = c("site", "Location", "Pool_1", "area", "FishBiom", "canopy", "Density")
df = rbind(Gdata[,vars], Kdata[,vars])
df = ddply(df,c('site','Location','Pool_1'),summarise, area=mean(area), Biomass=mean(FishBiom), canopy=mean(canopy), Density = mean(Density))
means = ddply(df,c('Location'),summarise, mean_area=mean(area), mean_Biomass=mean(Biomass), mean_canopy=mean(canopy), mean_Density= mean(Density))
sd = ddply(df,c('Location'),summarise, sd_area=sd(area), sd_Biomass=sd(Biomass), sd_canopy=sd(canopy), sd_Density= sd(Density))
Gdata = merge(Gdata, means, by.x = "Location")
Gdata = merge(Gdata, sd, by.x = "Location")
Kdata = merge(Kdata, means, by.x = "Location")
Kdata = merge(Kdata, sd, by.x = "Location")
Gdata$FishBiom <- (Gdata$FishBiom - Gdata$mean_Biomass) /  Gdata$sd_Biomass
Kdata$FishBiom <- (Kdata$FishBiom - Kdata$mean_Biomass) /  Kdata$sd_Biomass
Gdata$area <- (Gdata$area - Gdata$mean_area) /  Gdata$sd_area
Kdata$area <- (Kdata$area - Kdata$mean_area) /  Kdata$sd_area
Gdata$canopy <- (Gdata$canopy - Gdata$mean_canopy) /  Gdata$sd_canopy
Kdata$canopy <- (Kdata$canopy - Kdata$mean_canopy) /  Kdata$sd_canopy
Gdata$Density <- (Gdata$Density - Gdata$mean_Density) /  Gdata$sd_Density
Kdata$Density <- (Kdata$Density - Kdata$mean_Density) /  Kdata$sd_Density
# Re-code the random effects (drainage id) --------------------------------
Kdata$stream <- factor(Kdata$Location)
levels(Kdata$stream) <- 1:length(levels(Kdata$stream))
Kdata$stream <- as.numeric(Kdata$stream)
Gdata$stream <- factor(Gdata$Location)
levels(Gdata$stream) <- 1:length(levels(Gdata$stream))
Gdata$stream <- as.numeric(Gdata$stream)
Gdata$growth = log(Gdata$SL2_mm/Gdata$SL1_mm)
Kdata$growth = log(Kdata$SL2_mm/Kdata$SL1_mm)
# Model selection for Guppies ---------------------------------------------
# Survival model ----------------------------------------------------------
S1 <- brm(surv ~ z*NK + FishBiom + Density + canopy + (1|stream), family = bernoulli(), Gdata,
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(S1)
conditional_effects(S1, effects = 'z:NK')
Survival_G = Model_selection(S1, name = "Survival", species = "Guppy")
summary(Survival_G)
post = data.frame(posterior_samples(Survival_G))
write.csv(post, "outputs/Post_Survival_G.csv")
# Growth model ------------------------------------------------------------
G1 <- brm(z1 ~ z*NK + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(G1)
Growth_G = Model_selection(G1, name = "Growth", "Guppy")
post = data.frame(posterior_samples(Growth_G))
write.csv(post, "outputs/Post_Growth_G.csv")
# Reproduction model ------------------------------------------------------------
R1 <- brm(Recr ~ z*NK + FishBiom + Density + canopy + (1|stream), family = negbinomial(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
Repro_G = Model_selection(R1, name = "Repr", species = "Guppy")
post = data.frame(posterior_samples(Repro_G))
write.csv(post, "outputs/Post_Repr_G.csv")
# ######## Models for killifish -------------------------------------------
# Survival model ----------------------------------------------------------
S1 <- brm(surv ~ z*NG + FishBiom + Density + canopy + (1|stream), family = bernoulli(), Kdata,
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13), chains = 1)
summary(S1)
Survival_K = Model_selection(S1, name = "Survival", species = "Killifish")
summary(Survival_K)
post = data.frame(posterior_samples(Survival_K))
write.csv(post, "outputs/Post_Survival_K.csv")
# Growth model ------------------------------------------------------------
G1 <- brm(z1 ~ z*NG + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(G1)
Growth_K = Model_selection(G1, name = "Growth", "Guppy")
post = data.frame(posterior_samples(Growth_K))
write.csv(post, "outputs/Post_Growth_K.csv")
# Reproduction model ------------------------------------------------------------
R1 <- brm(Recr ~ z*NG + FishBiom + Density + canopy + (1|stream), family = negbinomial(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
Repro_K = Model_selection(R1, name = "Reproduction", "Killifish")
post = data.frame(posterior_samples(Repro_K))
write.csv(post, "outputs/Post_Repr_K.csv")
Gdata$growth
Gdata$z2
G2 <- brm(growth ~ z*NK + z2 + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(G2)
conditional_effects(G2, effects = "z:NK")
Kdata$z2
G3 <- brm(growth ~ z*NG + z2 +  FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(G3)
traceplot(G3)
plot(G3)
pp_check(G#)
pp_check(G3)
pp_check(G3)
center
Kdata$z3 <-  Kdata$z^3 - center^3
G3 <- brm(growth ~ z*NG + z2 + z3 +  FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
G3 <- brm(growth ~ s(z)*NG +   FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
G3 <- brm(bf(growth ~ s(z)*NG +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
G3 <- brm(bf(growth ~ s(z*NG) +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
plot(G3)
pp_check(G3)
summary(G3)
G3 <- brm(bf(growth ~ s(z) + NG +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
conditional_effects(G3, effects = "z:NG")
G3 <- brm(bf(growth ~ s(z) + s(z:NG) + NG +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
Kdata$zNG <- Kdata$z*Kdata$NG
Kdata$zNG
G3 <- brm(bf(growth ~ s(z) + s(zNG) + NG +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
plot(G3)
pp_check(G3)
conditional_effects(G3, effects = "z:NG")
msms <- marginal_smooths(G3)
msms
msms <- marginal_smooths(G3)
msms$`mu: s(z)`
G3 <- brm(bf(growth ~ s(z) + NG +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
plot(G3)
pp_check(G3)
msms <- marginal_smooths(G3)
msms$`mu: s(z)`
conditional_effects(G3, effects = "z:NG")
?marginal_smooths
ldat <- list(z = seq(from=5, to= 95, length = 100)
)
ldat <- list(z = seq(from=5, to= 95, length = 100),
NK = rep(1, 100)
)
ldat
msms <- marginal_smooths(G3, int_conditions = ldat )
msms
msms$`mu: s(z)`
msms <- conditional_smooths(G3, int_conditions = ldat )
msms
ldat <- list(z = seq(from=5, to= 95, length = 100) - 18,
NK = rep(1, 100)
)
msms <- conditional_smooths(G3, int_conditions = ldat )
msms
ldat <- list(z = seq(from=5, to= 95, length = 100) - 18,
NK = rep(0, 100)
)
msms0 <- conditional_smooths(G3, int_conditions = ldat )
msms0
ldat <- list(z = rep(seq(from=5, to= 95, length = 100) - 18, 2),
NK = c(rep(0, 100),rep(0, 100))
)
msms0 <- conditional_smooths(G3, int_conditions = ldat )
ldat <- list(z = rep(seq(from=5, to= 95, length = 100) - 18, 2),
NK = c(rep(0, 100),rep(1, 100))
)
ldat <- list(z = seq(from=5, to= 95, length = 100) - 18,
NK = rep(1, 100)
)
msms <- conditional_smooths(G3, int_conditions = ldat )
ldat <- list(z = seq(from=5, to= 95, length = 100) - 18,
NK = rep(0, 100)
)
msms0 <- conditional_smooths(G3, int_conditions = ldat )
msms$`mu: s(z)`
msms0$`mu: s(z)`
msms$`mu: s(z)` -msms0$`mu: s(z)`
?conditional_smooths()
conditional_effects(G3, effects = "z:NG")
eff = conditional_effects(G3, effects = "z:NG")
eff$`z:NG`
eff$`z:NG`
str(eff$`z:NG`)
eff$`z:NG`
posterior_smooths(G3)
?posterior_smooths
zs = c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18)
ldat <- list(z =  c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18),
NK = c(rep(0, 100),rep(1, 100))
)
ldat <- list(z =  c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18),
NG = c(rep(0, 100),rep(1, 100)),
FishBiom= c(rep(0, 100),rep(1, 100)),
Density =c(rep(0, 100),rep(1, 100)),
canopy =c(rep(0, 100),rep(1, 100))
)
posterior_smooths(G3, smooth = s(z), newdata = ldat)
posterior_smooths(G3, smooth = "s(z)", newdata = ldat)
eff = conditional_effects(G3, effects = "z:NG")
post = posterior_samples(pp)
posterior_predict(G3, newdata = ldat)
posterior_predict(G3)
Growth_K = Model_selection(G3, name = "Growth", "Killifish")
post = posterior_smooths(Growth_K, smooth = "s(z)", newdata = ldat)
write.csv(post, "outputs/Predictions_Growth_K.csv")
post
post = data.frame(posterior_samples(Growth_K))
write.csv(post, "outputs/Post_Growth_K.csv")
####
library(data.table)
library(brms)
rm(list=ls(all=TRUE))
###########################################################################################################
# First get the data
getwd()
#setwd("~/Dropbox/Jaime M/Projects_JM/FSU/Pool_manipulation/KG_git/")
source("R/Functions.R")
center = 18
# Guppy data cleaning -----------------------------------------------------
Gdata <- read.csv("data/GuppyIPM.csv")
Kdata <- read.csv("data/KillifishIPM.csv")
Gdata$z <- Gdata$SL1_mm - center
Gdata$z2 <- Gdata$SL1_mm^2 - center^2
Gdata$z1 <- Gdata$SL2_mm
# Make sure the non reproductive have zeros
Gdata$Recr[which(Gdata$Repr==0 & Gdata$surv ==1)] = 0
# Killifish data cleaning -------------------------------------------------
Kdata$z <- Kdata$SL1_mm - center
Kdata$z1 <- Kdata$SL2_mm
Kdata$z2 <- Kdata$SL1_mm^2 - center^2
# Make sure the non reproductive have zeros
Kdata$Recr[which(Kdata$Repr==0 & Kdata$surv ==1)] = 0
# Normalize the covariates within streams -----------------
Gdata$FishBiom <- Gdata$BiomassG1 + Gdata$BiomassK1
Kdata$FishBiom <- Kdata$BiomassG1 + Kdata$BiomassK1
Gdata$Density <-( Gdata$BiomassG1 + Gdata$BiomassK1) / Gdata$area
Kdata$Density <- (Kdata$BiomassG1 + Kdata$BiomassK1) / Kdata$area
library("plyr")
names(Gdata)
vars = c("site", "Location", "Pool_1", "area", "FishBiom", "canopy", "Density")
df = rbind(Gdata[,vars], Kdata[,vars])
df = ddply(df,c('site','Location','Pool_1'),summarise, area=mean(area), Biomass=mean(FishBiom), canopy=mean(canopy), Density = mean(Density))
means = ddply(df,c('Location'),summarise, mean_area=mean(area), mean_Biomass=mean(Biomass), mean_canopy=mean(canopy), mean_Density= mean(Density))
sd = ddply(df,c('Location'),summarise, sd_area=sd(area), sd_Biomass=sd(Biomass), sd_canopy=sd(canopy), sd_Density= sd(Density))
Gdata = merge(Gdata, means, by.x = "Location")
Gdata = merge(Gdata, sd, by.x = "Location")
Kdata = merge(Kdata, means, by.x = "Location")
Kdata = merge(Kdata, sd, by.x = "Location")
Gdata$FishBiom <- (Gdata$FishBiom - Gdata$mean_Biomass) /  Gdata$sd_Biomass
Kdata$FishBiom <- (Kdata$FishBiom - Kdata$mean_Biomass) /  Kdata$sd_Biomass
Gdata$area <- (Gdata$area - Gdata$mean_area) /  Gdata$sd_area
Kdata$area <- (Kdata$area - Kdata$mean_area) /  Kdata$sd_area
Gdata$canopy <- (Gdata$canopy - Gdata$mean_canopy) /  Gdata$sd_canopy
Kdata$canopy <- (Kdata$canopy - Kdata$mean_canopy) /  Kdata$sd_canopy
Gdata$Density <- (Gdata$Density - Gdata$mean_Density) /  Gdata$sd_Density
Kdata$Density <- (Kdata$Density - Kdata$mean_Density) /  Kdata$sd_Density
# Re-code the random effects (drainage id) --------------------------------
Kdata$stream <- factor(Kdata$Location)
levels(Kdata$stream) <- 1:length(levels(Kdata$stream))
Kdata$stream <- as.numeric(Kdata$stream)
Gdata$stream <- factor(Gdata$Location)
levels(Gdata$stream) <- 1:length(levels(Gdata$stream))
Gdata$stream <- as.numeric(Gdata$stream)
Gdata$growth = log(Gdata$SL2_mm/Gdata$SL1_mm)
Kdata$growth = log(Kdata$SL2_mm/Kdata$SL1_mm)
# Model selection for Guppies ---------------------------------------------
# Survival model ----------------------------------------------------------
S1 <- brm(surv ~ z*NK + FishBiom + Density + canopy + (1|stream), family = bernoulli(), Gdata,
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(S1)
conditional_effects(S1, effects = 'z:NK')
Survival_G = Model_selection(S1, name = "Survival", species = "Guppy")
summary(Survival_G)
post = data.frame(posterior_samples(Survival_G))
write.csv(post, "outputs/Post_Survival_G.csv")
# Growth model ------------------------------------------------------------
G1 <- brm(z1 ~ z*NK + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
Gdata$growth
Gdata$z2
G2 <- brm(growth ~ z*NK + z2 + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(G2)
conditional_effects(G2, effects = "z:NK")
Growth_G = Model_selection(G1, name = "Growth", "Guppy")
post = data.frame(posterior_samples(Growth_G))
write.csv(post, "outputs/Post_Growth_G.csv")
# Reproduction model ------------------------------------------------------------
R1 <- brm(Recr ~ z*NK + FishBiom + Density + canopy + (1|stream), family = negbinomial(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
Repro_G = Model_selection(R1, name = "Repr", species = "Guppy")
post = data.frame(posterior_samples(Repro_G))
write.csv(post, "outputs/Post_Repr_G.csv")
# ######## Models for killifish -------------------------------------------
# Survival model ----------------------------------------------------------
S1 <- brm(surv ~ z*NG + FishBiom + Density + canopy + (1|stream), family = bernoulli(), Kdata,
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13), chains = 1)
summary(S1)
Survival_K = Model_selection(S1, name = "Survival", species = "Killifish")
summary(Survival_K)
post = data.frame(posterior_samples(Survival_K))
write.csv(post, "outputs/Post_Survival_K.csv")
# Growth model ------------------------------------------------------------
G1 <- brm(z1 ~ z*NG + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
G3 <- brm(bf(growth ~ s(z) + NG +   FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
plot(G3)
Growth_K = Model_selection(G3, name = "Growth", "Killifish")
ldat <- list(z =  c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18),
NG = c(rep(0, 100),rep(1, 100)),
FishBiom= c(rep(0, 100),rep(1, 100)),
Density =c(rep(0, 100),rep(1, 100)),
canopy =c(rep(0, 100),rep(1, 100))
)
post = posterior_smooths(Growth_K, smooth = "s(z)", newdata = ldat)
write.csv(post, "outputs/Predictions_Growth_K.csv")
post = data.frame(posterior_samples(Growth_K))
write.csv(post, "outputs/Post_Growth_K.csv")
# Reproduction model ------------------------------------------------------------
R1 <- brm(Recr ~ z*NG + FishBiom + Density + canopy + (1|stream), family = negbinomial(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
Repro_K = Model_selection(R1, name = "Reproduction", "Killifish")
post = data.frame(posterior_samples(Repro_K))
write.csv(post, "outputs/Post_Repr_K.csv")
summary(Growth_K)
Kdata$zKG = Kdata$z * Kdata$NG
Kdata$zKG
summary(G3)
G3 <- brm(bf(growth ~ NG + s(z) + s(zKG) + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
plot(G3)
ldat <- list(z =  c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18),
NG = c(rep(0, 100),rep(1, 100)),
FishBiom= c(rep(0, 100),rep(1, 100)),
Density =c(rep(0, 100),rep(1, 100)),
canopy =c(rep(0, 100),rep(1, 100))
)
summary(Growth_K)
ldat <- list(z =  c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18),
NG = c(rep(0, 100),rep(1, 100)),
zNG = c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18) * c(rep(0, 100),rep(1, 100)),
FishBiom= c(rep(0, 100),rep(1, 100)),
Density =c(rep(0, 100),rep(1, 100)),
canopy =c(rep(0, 100),rep(1, 100))
)
summary(Growth_K)
posterior_smooths(G3, smooth = c("s(z)", "s(zNG)"), newdata = ldat)
G3 <- brm(bf(growth ~ NG +   s(z*KG) + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
Kdata$KG = factor(Kdata$NG)
G3 <- brm(bf(growth ~  s(z*KG) + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
G3 <- brm(bf(growth ~  s(z)*NK + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
as.numeric(Kdata$NG)
Kdata$KG = as.numeric(Kdata$NG)
Kdata$KG = as.numeric(Kdata$NG)
G3 <- brm(bf(growth ~  s(z*NG) + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
Kdata$KG = as.factor(Kdata$NG)
G3 <- brm(bf(growth ~  s(z*NG) + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
G3 <- brm(bf(growth ~  s(z)*NG + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
Kdata$KG = as.numeric(Kdata$NG)
####
library(data.table)
library(brms)
rm(list=ls(all=TRUE))
###########################################################################################################
# First get the data
getwd()
#setwd("~/Dropbox/Jaime M/Projects_JM/FSU/Pool_manipulation/KG_git/")
source("R/Functions.R")
center = 18
# Guppy data cleaning -----------------------------------------------------
Gdata <- read.csv("data/GuppyIPM.csv")
Kdata <- read.csv("data/KillifishIPM.csv")
Gdata$z <- Gdata$SL1_mm - center
Gdata$z2 <- Gdata$SL1_mm^2 - center^2
Gdata$z1 <- Gdata$SL2_mm
# Make sure the non reproductive have zeros
Gdata$Recr[which(Gdata$Repr==0 & Gdata$surv ==1)] = 0
# Killifish data cleaning -------------------------------------------------
Kdata$z <- Kdata$SL1_mm - center
Kdata$z1 <- Kdata$SL2_mm
Kdata$z2 <- Kdata$SL1_mm^2 - center^2
# Make sure the non reproductive have zeros
Kdata$Recr[which(Kdata$Repr==0 & Kdata$surv ==1)] = 0
# Normalize the covariates within streams -----------------
Gdata$FishBiom <- Gdata$BiomassG1 + Gdata$BiomassK1
Kdata$FishBiom <- Kdata$BiomassG1 + Kdata$BiomassK1
Gdata$Density <-( Gdata$BiomassG1 + Gdata$BiomassK1) / Gdata$area
Kdata$Density <- (Kdata$BiomassG1 + Kdata$BiomassK1) / Kdata$area
library("plyr")
names(Gdata)
vars = c("site", "Location", "Pool_1", "area", "FishBiom", "canopy", "Density")
df = rbind(Gdata[,vars], Kdata[,vars])
df = ddply(df,c('site','Location','Pool_1'),summarise, area=mean(area), Biomass=mean(FishBiom), canopy=mean(canopy), Density = mean(Density))
means = ddply(df,c('Location'),summarise, mean_area=mean(area), mean_Biomass=mean(Biomass), mean_canopy=mean(canopy), mean_Density= mean(Density))
sd = ddply(df,c('Location'),summarise, sd_area=sd(area), sd_Biomass=sd(Biomass), sd_canopy=sd(canopy), sd_Density= sd(Density))
Gdata = merge(Gdata, means, by.x = "Location")
Gdata = merge(Gdata, sd, by.x = "Location")
Kdata = merge(Kdata, means, by.x = "Location")
Kdata = merge(Kdata, sd, by.x = "Location")
Gdata$FishBiom <- (Gdata$FishBiom - Gdata$mean_Biomass) /  Gdata$sd_Biomass
Kdata$FishBiom <- (Kdata$FishBiom - Kdata$mean_Biomass) /  Kdata$sd_Biomass
Gdata$area <- (Gdata$area - Gdata$mean_area) /  Gdata$sd_area
Kdata$area <- (Kdata$area - Kdata$mean_area) /  Kdata$sd_area
Gdata$canopy <- (Gdata$canopy - Gdata$mean_canopy) /  Gdata$sd_canopy
Kdata$canopy <- (Kdata$canopy - Kdata$mean_canopy) /  Kdata$sd_canopy
Gdata$Density <- (Gdata$Density - Gdata$mean_Density) /  Gdata$sd_Density
Kdata$Density <- (Kdata$Density - Kdata$mean_Density) /  Kdata$sd_Density
# Re-code the random effects (drainage id) --------------------------------
Kdata$stream <- factor(Kdata$Location)
levels(Kdata$stream) <- 1:length(levels(Kdata$stream))
Kdata$stream <- as.numeric(Kdata$stream)
Gdata$stream <- factor(Gdata$Location)
levels(Gdata$stream) <- 1:length(levels(Gdata$stream))
Gdata$stream <- as.numeric(Gdata$stream)
Gdata$growth = log(Gdata$SL2_mm/Gdata$SL1_mm)
Kdata$growth = log(Kdata$SL2_mm/Kdata$SL1_mm)
Kdata$NG = as.factor(Kdata$NG)
G3 <- brm(bf(growth ~  s(z*NG)  + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
G3 <- brm(bf(growth ~  s(z) * s(NG)  + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
G3 <- brm(bf(growth ~  t2(z) +  NG  + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
pp_check(G3)
G3 <- brm(bf(growth ~  t2(z) *  NG  + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
G3 <- brm(bf(growth ~  t2(z*NG)   + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
summary(G3)
G3 <- brm(bf(growth ~  s(z) + NG   + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
G3 <- brm(bf(growth ~  s(z) + z*NG   + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
Kdata$NG = as.numeric(Kdata$NG)
Kdata$zNG = Kdata$z*Kdata$NG
G3 <- brm(bf(growth ~ NG  + s(z) + s(zNG) + FishBiom + Density + canopy + (1|stream)), family = gaussian(), subset(Kdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 15))
Growth_K = Model_selection(G3, name = "Growth", "Killifish")
ldat <- list(z =  c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18),
NG = c(rep(0, 100),rep(1, 100)),
zNG = c(seq(from=5, to= 95, length = 100) - 18, seq(from=5, to= 95, length = 100) - 18) * c(rep(0, 100),rep(1, 100)),
FishBiom= c(rep(0, 100),rep(1, 100)),
Density =c(rep(0, 100),rep(1, 100)),
canopy =c(rep(0, 100),rep(1, 100))
)
summary(Growth_K)
posterior_smooths(G3, smooth = c("s(z)"), newdata = ldat)
post = posterior_smooths(Growth_K, smooth = "s(z)", newdata = ldat)
write.csv(post, "outputs/Predictions_Growth_K.csv")
post = data.frame(posterior_samples(Growth_K))
write.csv(post, "outputs/Post_Growth_K.csv")
saveRDS(Growth_K, "outputs/Growth_K.RDS")
posterior_predict(Growth_G, ldat)
G2 <- brm(growth ~ z*NK + z2 + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
posterior_predict(Growth_G, ldat)
posterior_predict(G2, ldat)
posterior_average(G2, ldat)
posterior_linpred(G2, ldat)
d = conditional_effects(G2, effects = "z:NK")
d$`z:NK`
G2 <- brm(growth ~ z*NK + z2 + FishBiom + Density + canopy + (1|stream), family = gaussian(), subset(Gdata, surv == 1),
iter = 2000, warmup = 1000, control = list(adapt_delta = 0.92, max_treedepth = 13))
summary(G2)
Growth_G = Model_selection(G2, name = "Growth", "Guppy")
post = data.frame(posterior_samples(Growth_G))
write.csv(post, "outputs/Post_Growth_G.csv")
summary(G2)
